---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m0s
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki
      version: 6.43.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    # disableWait: true
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    # disableWait: true
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # loki:
    #   auth_enabled: false

    # gateway:
    #   replicas: 1
    #   ingress:
    #     enabled: true
    #     ingressClassName: "traefik"
    #     annotations:
    #       cert-manager.io/cluster-issuer: "letsencrypt-production"
    #       traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    #     hosts:
    #       - host: &host "loki.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #     tls:
    #       - hosts:
    #           - *host
    #         secretName: "loki-${SECRET_DOMAIN//./-}-tls"
    # read:
    #   replicas: 1
    #   persistence:
    #     storageClass: local-path
    #   extraVolumeMounts:
    #     - name: rules
    #       mountPath: /rules
    #   extraVolumes:
    #     - name: rules
    #       emptyDir: {}
    # write:
    #   replicas: 1
    #   persistence:
    #     storageClass: local-path
    # backend:
    #   replicas: 1
    #   persistence:
    #     storageClass: local-path
    #   extraVolumeMounts:
    #     # - name: rules
    #     #   mountPath: /rules/fake
    #     - name: scratch
    #       mountPath: /tmp/scratch
    #   extraVolumes:
    #     # - name: rules
    #     #   configMap:
    #     #     name: loki-alerting-rules
    #     - name: scratch
    #       emptyDir: {}
    # monitoring:
    #   serviceMonitor:
    #     enabled: false
    #     metricsInstance:
    #       enabled: false
    #   selfMonitoring:
    #     enabled: false
    #     grafanaAgent:
    #       installOperator: false
    #   lokiCanary:
    #     enabled: false
    # test:
    #   enabled: false

    deploymentMode: SimpleScalable
    loki:
      ingester:
        chunk_encoding: snappy
      # storage:
      #   type: s3
      #   s3:
      #     s3ForcePathStyle: true
      #     insecure: true
      # schemaConfig:
      #   configs:
      #     - from: "2024-04-01" # quote
      #       store: tsdb
      #       object_store: s3
      #       schema: v13
      #       index:
      #         prefix: loki_index_
      #         period: 24h
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
          grpc_server_max_recv_msg_size: 8388608
          grpc_server_max_send_msg_size: 8388608
        limits_config:
          ingestion_burst_size_mb: 128
          ingestion_rate_mb: 64
          max_query_parallelism: 100
          per_stream_rate_limit: 64M
          per_stream_rate_limit_burst: 128M
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          retention_period: 30d
          shard_streams:
            enabled: true
          split_queries_by_interval: 1h
        query_scheduler:
          max_outstanding_requests_per_tenant: 4096
        frontend:
          max_outstanding_per_tenant: 4096
        # ruler:
        #   enable_api: true
        #   enable_alertmanager_v2: true
        #   alertmanager_url: http://alertmanager-operated.observability.svc.cluster.local:9093
        #   storage:
        #     type: local
        #     local:
        #       directory: /rules
        #   rule_path: /rules/fake
        analytics:
          reporting_enabled: false
    backend:
      replicas: 1
      persistence:
        size: 20Gi
        storageClass: local-path
    gateway:
      replicas: 1
      image:
        registry: ghcr.io
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: &host "loki.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "loki-${SECRET_DOMAIN//./-}-tls"
    read:
      replicas: 1
    write:
      replicas: 1
      persistence:
        size: 20Gi
        storageClass: local-path
    lokiCanary:
      enabled: false
    test:
      enabled: false
